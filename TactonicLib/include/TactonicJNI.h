/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class TactonicJNI */


void callback(TactonicDevice tactonicDevice, TactonicFrame* forceFrame);
#ifndef _Included_TactonicJNI
#define _Included_TactonicJNI
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     TactonicJNI
 * Method:    getDevices
 * Signature: (L)
 */
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_getDeviceList
  (JNIEnv *, jobject,  jobject);

/*
 * Class:     TactonicJNI
 * Method:    startDevice
 * Signature: (L)
 */
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_startDevice
  (JNIEnv *, jobject,  jobject);

/*
 * Class:     TactonicJNI
 * Method:    stopDevice
 * Signature: (L)
 */
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_stopDevice
  (JNIEnv *, jobject, jobject);

/* 
*Class:     TactonicJNI
* Method:    getFrame
* Signature: (LL)
*/
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_pollFrame
  (JNIEnv *, jobject, jobject, jobject);

/* 
*Class:     TactonicJNI
* Method:    addFrameCallback
* Signature: (LL)
*/
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_addFrameCallback
  (JNIEnv *, jobject, jobject, jobject);

/* 
*Class:     TactonicJNI
* Method:    removeFrameCallback
* Signature: (LL)
*/
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_removeFrameCallback
  (JNIEnv *, jobject, jobject, jobject);

/* 
*Class:     TactonicJNI
* Method:    addDeviceCallback
* Signature: (LL)
*/
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_addDeviceCallback
  (JNIEnv *, jobject, jobject, jobject);

/* 
*Class:     TactonicJNI
* Method:    removeDeviceCallback
* Signature: (LL)
*/
JNIEXPORT void JNICALL Java_com_tactonic_api_TactonicJNI_removeDeviceCallback
  (JNIEnv *, jobject, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
